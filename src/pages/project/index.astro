---

import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import "../../styles/global.css";
import Projects from '@/components/Projects';

const projects = (await getCollection('project')).sort(
	(a, b) => Date.parse(b.data.date) - Date.parse(a.data.date),
).map(post => post.data);

const featured = projects.find((project) => project.title === "Friday");
const top2 = projects.find((project) => project.title === "Productivity");
const top3 = projects.find((project) => project.title === "Chess Online");

const sorted = projects.sort((a, b) => {
	if (a.date && b.date) {
		return new Date(b.date).getTime() - new Date(a.date).getTime();
	}
	return 0;
});

---

<html lang="en" class="dark">
	<Projects projects={projects} client:load/>
</html>


<!-- 
<html lang="en">
	<body class="relative pb-16">
		<div class="container">
			<div class="header">
				<h2>Projects</h2>
			</div>
			<div class="divider"></div>

			<div class="grid">
				<div class="card">
					<a href={`/project/${featured?.title}`}>
						<article class="article" tabindex="-1">
							<div class="article-header">
								<div class="date">
									{featured?.date ? (
										<time datetime={new Date(featured?.date).toISOString()}>
											{Intl.DateTimeFormat(undefined, {
												dateStyle: "medium",
											}).format(new Date(featured?.date))}
										</time>
									) : (
										<span>SOON</span>
									)}
								</div>
							</div>

							<h2 id="featured-post" class="article-title">
								{featured?.title}
							</h2>
							<p class="article-description">
								{featured?.description}
							</p>
							<div class="read-more">
								<p>Read more <span aria-hidden="true">&rarr;</span></p>
							</div>
						</article>
					</a>
				</div>

				<div class="top-projects">
					{[top2, top3].filter(project => project !== undefined).map((project) => (
						<div class="card">
							<article class="article" tabindex="-1">
								<h2 class="article-title">
									{project.title}
								</h2>
								<p class="article-description">
									{project.description}
								</p>
							</article>
						</div>
					))}
				</div>
			</div>
			<div class="divider hidden-md"></div>

			<div class="grid grid-cols-3">
				<div class="column">
					{sorted.filter((_, i) => i % 3 === 0).map((project) => (
						<div class="card">
							<article class="article" tabindex="-1">
								<h2 class="article-title">
									{project.title}
								</h2>
								<p class="article-description">
									{project.description}
								</p>
							</article>
						</div>
					))}
				</div>
				<div class="column">
					{sorted.filter((_, i) => i % 3 === 1).map((project) => (
						<div class="card">
							<article class="article" tabindex="-1">
								<h2 class="article-title">
									{project.title}
								</h2>
								<p class="article-description">
									{project.description}
								</p>
							</article>
						</div>
					))}
				</div>
				<div class="column">
					{sorted.filter((_, i) => i % 3 === 2).map((project) => (
						<div class="card">
							<article class="article" tabindex="-1">
								<h2 class="article-title">
									{project.title}
								</h2>
								<p class="article-description">
									{project.description}
								</p>
							</article>
						</div>
					))}
				</div>
			</div>
		</div>
	</body>
</html>

<style>
	/* add styles here */
	body {
		position: relative;
		padding-bottom: 4rem;
	}
	.container {
		padding: 4rem 1.5rem;
		margin: 0 auto;
		max-width: 112rem;
	}
	.header {
		max-width: 64rem;
		margin: 0 auto;
	}
	.header h2 {
		font-size: 2rem;
		font-weight: bold;
		color: #e5e7eb;
	}
	.divider {
		width: 100%;
		height: 1px;
		background-color: #1f2937;
	}
	.grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 2rem;
		margin: 0 auto;
	}
	.card {
		background-color: #1f2937;
		border-radius: 0.5rem;
		overflow: hidden;
	}
	.article {
		position: relative;
		width: 100%;
		padding: 1rem 2rem;
	}
	.article-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		gap: 0.5rem;
	}
	.date {
		font-size: 0.75rem;
		color: #e5e7eb;
	}
	.article-title {
		margin-top: 1rem;
		font-size: 2rem;
		font-weight: bold;
		color: #e5e7eb;
	}
	.article-description {
		margin-top: 1rem;
		line-height: 2rem;
		color: #9ca3af;
	}
	.read-more {
		position: absolute;
		bottom: 1rem;
	}
	.read-more p {
		color: #d1d5db;
	}
	.read-more p:hover {
		color: #f9fafb;
	}
	.top-projects {
		display: flex;
		flex-direction: column;
		gap: 2rem;
		margin: 0 auto;
		border-top: 1px solid rgba(31, 41, 55, 0.1);
	}
	.hidden-md {
		display: none;
	}
	.grid-cols-3 {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 1rem;
		margin: 0 auto;
	}
	.column {
		display: grid;
		grid-template-columns: 1fr;
		gap: 1rem;
	}
	@media (min-width: 768px) {
		.hidden-md {
			display: block;
		}
	}
</style> -->