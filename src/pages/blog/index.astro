---
import { getCollection } from "astro:content";
import Navigation from "@/components/Navigation.astro";
import "../../styles/global.css";
import BlogCard from "@/components/BlogCard.astro";
import Blog from "@/components/Blog.astro";
import BaseHead from "@/components/BaseHead.astro";

const blogs = (await getCollection("blog"))
	.sort((a, b) => Date.parse(b.data.date) - Date.parse(a.data.date))
	.filter((post)=>!post.data.draft)
	.map((post) => post);

const sorted = blogs.sort((a, b) => {
	if (a.data.date && b.data.date) {
		return (
			new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
		);
	}
	return 0;
});
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={"Blog"} description={"Blog"} />
	</head>
	<body class="bg-gradient-to-tl from-black via-neutral-900 to-black h-screen">
		<Navigation />
		<div class="relative pb-16">
			<div
				class="px-6 pt-16 mx-auto space-y-8 max-w-7xl lg:px-8 md:space-y-16 md:pt-24 lg:pt-32"
			>
				<div class="max-w-2xl mx-auto lg:mx-0">
					<h2
						class="text-3xl font-bold tracking-tight text-zinc-100 sm:text-4xl"
						transition:name={"Blog"}
					>
						Blog
					</h2>
				</div>

				<div
					class="flex flex-col w-full gap-8 mx-auto border-t border-gray-900/10 lg:mx-0 lg:border-t-0"
				>
					<div class="hidden w-full h-px md:block bg-zinc-800"></div>

					<div
						class="grid grid-cols-1 gap-4 mx-auto lg:mx-0 md:grid-cols-3"
					>
						<div class="grid grid-cols-1 gap-4">
							{
								sorted
									.filter((_, i) => i % 3 === 0)
									.map((blog) => (
										<BlogCard key={blog.id}>
											<Blog
												id={blog.id}
												blog={blog.data}
												views={0}
											/>
										</BlogCard>
									))
							}
						</div>
						<div class="grid grid-cols-1 gap-4">
							{
								sorted
									.filter((_, i) => i % 3 === 1)
									.map((blog) => (
										<BlogCard key={blog.id}>
											<Blog
												id={blog.id}
												blog={blog.data}
												views={0}
											/>
										</BlogCard>
									))
							}
						</div>
						<div class="grid grid-cols-1 gap-4">
							{
								sorted
									.filter((_, i) => i % 3 === 2)
									.map((blog) => (
										<BlogCard key={blog.id}>
											<Blog
												id={blog.id}
												blog={blog.data}
												views={0}
											/>
										</BlogCard>
									))
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>
